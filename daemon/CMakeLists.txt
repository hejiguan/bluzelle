cmake_minimum_required(VERSION 3.9)

set(CMAKE_CXX_STANDARD 17)
set(REQUIRED_BOOST "1.65.0")

if(MSVC)
    message(STATUS "*** building make for Windows")
    add_compile_options(/W4)
elseif(UNIX AND NOT APPLE)
    message(STATUS "*** building make for Unix")
    add_compile_options(-lrt)
elseif(APPLE)
    message(STATUS "*** building make for MacOS")
    add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# TODO can we move this to the root CMakeLists.txt?
find_package(
        Boost ${REQUIRED_BOOST}
        REQUIRED COMPONENTS
        system
        coroutine
        thread
        regex
        chrono
        random
        program_options
        unit_test_framework REQUIRED)

if(Boost_FOUND)
    message(STATUS "Your boost is here: ${Boost_INCLUDE_DIRS}")
    check_asio_version()
    check_beast_version()
    include_directories(${Boost_INCLUDE_DIRS})
endif()

###############################################################################
# Primary project for the_db
project(the_db)
include_directories(
        .
        websockets
        command_line_options
        peers
        storage
        raft
)
set(SOURCE_FILES
        main.cpp
        websockets/Listener.h
        websockets/Session.cpp
        websockets/Session.h
        websockets/WebSocketServer.h
        command_line_options/CommandLineOptions.h
        command_line_options/CommandLineOptions.cpp
        peers/Peer.h
        peers/Peer.cpp
        peers/PeerList.h
        peers/PeerList.cpp
        peers/PeerListener.h
        peers/PeerListener.cpp
        peers/PeerSession.h
        peers/PeerSession.cpp
        peers/PeerServer.h
        peers/PeerServer.cpp
        storage/Storage.h
        storage/Storage.cpp
        raft/Raft.h
        raft/Raft.cpp
        NodeInfo.hpp
        Singleton.hpp
        Node.h
        Node.cpp
        main.cpp
        MessageInfo.hpp raft/CommandFactory.h raft/Command.hpp raft/CrudCreateCommand.h raft/CrudCreateCommand.cpp raft/RaftHeartbeatCommand.h raft/RaftHeartbeatCommand.cpp raft/CrudReadCommand.h raft/CrudReadCommand.cpp raft/CommandFactory.cpp raft/ApiCreateCommand.h raft/ApiCommandQueue.h raft/ApiReadCommand.h raft/ApiReadCommand.cpp raft/ApiCreateCommand.cpp raft/ErrorCommand.hpp)
add_executable(the_db ${SOURCE_FILES})
target_link_libraries(the_db ${Boost_LIBRARIES})
if(UNIX AND NOT APPLE)
    target_link_libraries(the_db pthread)
endif()

###############################################################################
# Unit tests
message(STATUS "*** CMakeLists for bluzelled_test")
enable_testing()

include_directories(websockets command_line_options)
set(SOURCE_FILES
        test.cpp
        websockets/Listener.h
        websockets/Session.cpp
        websockets/Session.h
        websockets/WebSocketServer.h
        websockets/WebSocketServer_tests.cpp
        command_line_options/CommandLineOptions.h
        command_line_options/CommandLineOptions.cpp
        command_line_options/command_line_options_test.cpp)
add_executable(the_db_test ${SOURCE_FILES})
target_link_libraries(the_db_test ${Boost_LIBRARIES})
if(UNIX AND NOT APPLE)
    target_link_libraries(the_db_test pthread)
endif()
