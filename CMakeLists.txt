cmake_minimum_required(VERSION 3.9)
project(bluzelle)

function(check_asio_version)
    set(ASIO_VERSION_HPP "${Boost_INCLUDE_DIRS}/boost/asio/version.hpp")
    set(REQUIRED_ASIO "101010")
    set(REQUIRED_COMMIT "c88c5f7e1c5a3007f556c72c7020cb25f118ee58")
    IF(EXISTS ${ASIO_VERSION_HPP})
        FILE(READ ${ASIO_VERSION_HPP} contents)
        STRING(REGEX MATCH "#define BOOST_ASIO_VERSION [0-9]*" contents ${contents})
        STRING(COMPARE EQUAL "#define BOOST_ASIO_VERSION ${REQUIRED_ASIO}" ${contents} _cmp)
        IF(NOT _cmp)
            message(FATAL_ERROR "\n!!!\nYour BOOST does not contain the correct version of ASIO;\n\t${contents}\nthe correct version is in ${REQUIRED_ASIO} github commit ${REQUIRED_COMMIT}.")
        ENDIF()
    ELSE()
        message(FATAL_ERROR "\n!!!\nYour BOOST does not contain asio(which is odd)...")
    ENDIF()
endfunction()

function(check_beast_version)
    set(BEAST_VERSION_HPP "${Boost_INCLUDE_DIRS}/boost/beast/version.hpp")
    set(REQUIRED_BEAST "123")
    set(REQUIRED_COMMIT "885b9dfe0b6bfc7be6a9158d60f0760aa43e748a")
    IF(EXISTS ${BEAST_VERSION_HPP})
        FILE(READ ${BEAST_VERSION_HPP} contents)
        STRING(REGEX  MATCH "#define BOOST_BEAST_VERSION [0-9]*" contents ${contents})
        STRING(COMPARE EQUAL "#define BOOST_BEAST_VERSION ${REQUIRED_BEAST}" ${contents} _cmp )
        if(NOT _cmp)
            message(FATAL_ERROR "\n!!!\nYour BOOST does not contain the correct version of BEAST;\n\t${contents}\nthe correct version is ${REQUIRED_BEAST} github commit ${REQUIRED_COMMIT}.")
        endif()
    ELSE()
        message(FATAL_ERROR "\n!!!\nYour BOOST does not contain the beast library. Grab it from the boost github.\n\n")
    ENDIF()
endfunction()

message(STATUS "*** adding daemon subdirectory")
add_subdirectory(daemon)
